name: Build Library

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest]
        arch: [arm64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: linux/arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
    
      - name: Create assets directory
        run: mkdir -p export
    
      - name: Build Docker image
        run: docker buildx build --platform linux/arm64 -t libturbojpeg .

      - name: Export library files
        run: docker run --rm -v export:/export libturbojpeg:latest
      
      - name: Save artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: export/libjpeg-turbo-java.tar.gz
          if-no-files-found: error
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          tag_name: ${{ github.run_id }}
          release_name: $(date +'%Y%m%d')
          draft: false
          prerelease: false
        
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: export/libjpeg-turbo-java.tar.gz
          asset_name: libjpeg-turbo-java.tar.gz
          asset_content_type: application/gzip
